{"version":3,"sources":["_base/_text.scss","_variables/_mixins.scss","editor-style.css"],"names":[],"mappings":"AAEA,EACI,eAAA,mBAEA,8BAAA,MAAA,CAAA,MAAA,CAAA,OACA,2BAAA,MAAA,CAAA,MAAA,CAAA,OACA,2BAAA,QAAA,CAAA,QAAA,CAAA,SACA,sBAAA,OAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,EACA,qBAAA,OAAA,aAAA,OAEA,+BAAA,iBAAA,4BAAA,iBAAA,uBAAA,iBAWJ,cACC,WAAA,OAGD,YACC,WAAA,KAGD,aACC,WAAA,MAGD,eACC,WAAA,QClBC,yCDwBD,qBACC,WAAA,OAGD,mBACC,WAAA,KAGD,oBACC,WAAA,MAGD,sBACC,WAAA,SAUD,aACC,MAAA,KADD,eAKE,MAAA,KAEA,gBAAA,KAKF,wCACC,MAAA,KAEA,QAAA,GAED,+BACC,MAAA,KAEA,QAAA,GAED,mCACC,MAAA,KAEA,QAAA,GAED,8BACC,MAAA,KAEA,QAAA,GAID,8CACC,MAAA,YAED,qCACC,MAAA,YAED,yCACC,MAAA,YAED,oCACC,MAAA,YAID,eErBD,eACA,eACA,eACA,eACA,eFwBG,MAAA,KAKF,cAEE,MAAA","file":"editor-style.css","sourcesContent":["// Text\n\n* {\n    text-rendering: optimizeLegibility;\n\n    -webkit-font-feature-settings: \"kern\", \"liga\", \"dlig\";\n    -moz-font-feature-settings: \"kern\", \"liga\", \"dlig\";\n    -moz-font-feature-settings: \"kern=1\", \"liga=1\", \"dlig=1\";\n    font-feature-settings: \"kern\" 1, \"liga\" 1, \"dlig\" 1;\n    font-kerning: normal;\n\n    font-variant-ligatures: common-ligatures;\n\n\t// -webkit-font-smoothing: antialiased;\n\t// -moz-osx-font-smoothing: grayscale;\n}\n\n\n\n\n\n//// Alignment\n.text--center {\n\ttext-align: center;\n}\n\n.text--left {\n\ttext-align: left;\n}\n\n.text--right {\n\ttext-align: right;\n}\n\n.text--justify {\n\ttext-align: justify;\n}\n\n\n\n@include breakpoint(mobile) {\n\t.mobile-text--center {\n\t\ttext-align: center;\n\t}\n\n\t.mobile-text--left {\n\t\ttext-align: left;\n\t}\n\n\t.mobile-text--right {\n\t\ttext-align: right;\n\t}\n\n\t.mobile-text--justify {\n\t\ttext-align: justify;\n\t}\n}\n\n\n\n\n\n//// Text colors\n@each $color, $value in $colors {\n\t.text--#{$color} {\n\t\tcolor: $value;\n\n\n\t\t& > a {\n\t\t\tcolor: $value;\n\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n\n\n\t.text--#{$color}::-webkit-input-placeholder {\n\t\tcolor: $value;\n\n\t\topacity: 0.6;\n\t}\n\t.text--#{$color}::-moz-placeholder {\n\t\tcolor: $value;\n\n\t\topacity: 0.6;\n\t}\n\t.text--#{$color}:-ms-input-placeholder {\n\t\tcolor: $value;\n\n\t\topacity: 0.6;\n\t}\n\t.text--#{$color}:-moz-placeholder {\n\t\tcolor: $value;\n\n\t\topacity: 0.6;\n\t}\n\n\n\t.text--#{$color}:focus::-webkit-input-placeholder {\n\t\tcolor: transparent;\n\t}\n\t.text--#{$color}:focus::-moz-placeholder {\n\t\tcolor: transparent;\n\t}\n\t.text--#{$color}:focus:-ms-input-placeholder {\n\t\tcolor: transparent;\n\t}\n\t.text--#{$color}:focus:-moz-placeholder {\n\t\tcolor: transparent;\n\t}\n\n\t\n\th1,\n\th2,\n\th3,\n\th4,\n\th5,\n\th6 {\n\t\t&.text--#{$color} {\n\t\t\tcolor: $value;\n\t\t}\n\t}\n\n\n\tp {\n\t\t&.text--#{$color} {\n\t\t\tcolor: $value;\n\t\t}\n\t}\n}","/* MIX-INS & FUNCTIONS */\n\n// BREAKPOINTS\n@mixin breakpoint($point) {\n\t@if $point == xxlarge {\n\t\t@media only screen and (min-width : $xxLargeSize) { @content; }\n\t}\n\t@else if $point == large {\n\t\t@media only screen and (min-width : $largeSize) { @content; }\n\t}\n\t@else if $point == landscape {\n\t\t@media only screen and (max-width : $landscapeSize) { @content; }\n\t}\n\t@else if $point == portrait {\n\t\t@media only screen and (max-width : $portraitSize) { @content; }\n\t}\n\t@else if $point == mobile {\n\t\t@media only screen and (max-width : $mobileSize) { @content; }\n\t}\n\t@else if $point == mobile-small {\n\t\t@media only screen and (max-width : $mobileSmallSize) { @content; }\n\t}\n}\n\n\n\n\n\n\n// FONT-SIZE RESPONSIVE FUNCTIONS\n@function font-size-math($base, $size, $unit) {\n\t@return (($size / $base) * $unit);\n}\n@function line-height-math($size, $line-height) {\n\t@return ($line-height / $size);\n}\n@function letter-spacing-math($size, $letter-spacing) {\n\t@return (($letter-spacing / $size) * 1em);\n}\n\n\n@mixin fontmath($unit, $size, $line-height, $letter-spacing) {\n\tfont-size: font-size-math($base-value, $size, $unit);\n\tline-height: line-height-math($size, $line-height);\n\tletter-spacing: letter-spacing-math($size, $letter-spacing);\n}\n\n/*\nEXAMPLE USAGE:\nh1 {\n\t@include fontmath(1em, 36, 42, 4.5);\n}\n\nEnsure that the base unit has a 1 in front of it - whether it be 1em or 1rem, it's required to do the math. Do not use units for the other numbers (it assumes those are pixel values and converts them to the proper formats for responsive text).\n*/\n\n\n\n\n\n\n// SCRIM GRADIENTS (BETTER EASING)\n// based on https://codepen.io/jmkII/pen/pParwj & https://css-tricks.com/easing-linear-gradients/\n$scrimStops: \t0% 0%,\n\t\t\t\t26.2% 19%,\n\t\t\t\t45.9% 34%,\n\t\t\t\t61.8% 47%,\n\t\t\t\t72.2% 56.5%,\n\t\t\t\t80.6% 65%,\n\t\t\t\t87.4% 73%,\n\t\t\t\t92.5% 80.2%,\n\t\t\t\t95.8% 86.1%,\n\t\t\t\t97.9% 91%,\n\t\t\t\t99.2% 95.2%,\n\t\t\t\t99.8% 98.2%,\n\t\t\t\t100% 100%;\n\n@function getColorStop($colorTo, $colorFrom, $weight, $stop) {\n\t@return mix($colorFrom, $colorTo, $weight) $stop;\n}\n\n@function getColorStops($colorTo, $colorFrom) {\n\t$stops: ();\n\t@each $scrimStop in $scrimStops {\n\t\t$stops: append($stops, getColorStop($colorTo, $colorFrom, nth($scrimStop, 1), nth($scrimStop, 2)), comma)\n\t}\n\t@return $stops;\n}\n\n@function scrim-linear-gradient($args...) {\n\t@if (length($args) == 3) {\n\t\t@return linear-gradient(to nth($args, 1), #{getColorStops(nth($args, 2), nth($args, 3))});\n\t}\n\t@return linear-gradient(to nth($args, 1), #{nth($args, 2)}, #{getColorStops(nth($args, 3), nth($args, 4))});\n}\n\n/*\nEXAMPLE USAGE:\nsection {\n\tbackground-image: scrim-linear-gradient(right, black, transparent);\n}\n*/\n\n\n\n\n\n\n// CSS VARIABLES\n// based on http://codepen.io/vank0/pen/kkGvAb\n@function var( $variable ) {\n\t@if ( $css4 ) {\n\t\t@return unquote( 'var(' + $variable + ')' );\n\t}\n\t@else {\n\t\t@return map-get( $css-variables, $variable );\n\t}\n}\n\n@mixin css4 {\n\t@if ( $css4 ) {\n\t\t$css4-backup: $css4;\n\n\t\t@if ( $compatibility ) {\n\t\t\t$css4: false !global;\n\t\t\t@content;\n\t\t}\n\n\t\t$css4: true !global;\n\t\t@content;\n\n\t\t$css4: $css4-backup;\n\t}\n\n\t@else {\n\t\t@content;\n\t}\n}\n\n\n\n\n\n\n// NTH-CHILD MIXINS\n// based on https://css-tricks.com/extremely-handy-nth-child-recipes-sass-mixins/ & https://gist.github.com/adamgiese/717969cb38d4b30e1eff3d3abc6472f0\n@mixin valid-quantity($quantity) {\n\t@if type-of($quantity) != 'number' {\n\t\t@error 'The \"quantity\" parameter must be a number!';\n\t}\n\t@if not(unitless($quantity)) {\n\t\t@error 'The \"quantity\" parameter must not have a unit!';\n\t}\n\t@if $quantity < 0 {\n\t\t@error 'The \"quantity\" parameter must be at least 0!';\n\t}\n}\n\n@mixin has-nth($expression, $element: '*') {\n\t&:nth-last-child(#{$expression}):first-child,\n\t&:nth-last-child(#{$expression}):first-child ~ #{$element} {\n\t\t@content;\n\t}\n}\n\n@mixin at-least($quantity, $element: '*') {\n\t@include valid-quantity($quantity);\n\t@include has-nth('n + #{$quantity}', $element) {\n\t\t@content;\n\t}\n}\n\n@mixin at-most($quantity, $element: '*') {\n\t@include valid-quantity($quantity);\n\t@include has-nth('-n + #{$quantity}', $element) {\n\t\t@content;\n\t}\n}\n\n@mixin has-exactly($quantity, $element: '*') {\n\t@include valid-quantity($quantity);\n\t@include has-nth('#{$quantity}', $element) {\n\t\t@content;\n\t}\n}\n\n@mixin divisible-by($quantity, $offset: 0, $element: '*') {\n\t@include valid-quantity($quantity);\n\t@include has-nth('#{$quantity}n + #{$offset}', $element) {\n\t\t@content;\n\t}\n}\n\n/*\nEXAMPLE USAGE:\n@include has-nth('n + 4', 'li') {\n\tborder: 0;\n}\n*/","/* VARIABLES */\n/* MIX-INS & FUNCTIONS */\n/*\nEXAMPLE USAGE:\nh1 {\n\t@include fontmath(1em, 36, 42, 4.5);\n}\n\nEnsure that the base unit has a 1 in front of it - whether it be 1em or 1rem, it's required to do the math. Do not use units for the other numbers (it assumes those are pixel values and converts them to the proper formats for responsive text).\n*/\n/*\nEXAMPLE USAGE:\nsection {\n\tbackground-image: scrim-linear-gradient(right, black, transparent);\n}\n*/\n/*\nEXAMPLE USAGE:\n@include has-nth('n + 4', 'li') {\n\tborder: 0;\n}\n*/\n* {\n  text-rendering: optimizeLegibility;\n  -webkit-font-feature-settings: \"kern\", \"liga\", \"dlig\";\n  -moz-font-feature-settings: \"kern\", \"liga\", \"dlig\";\n  -moz-font-feature-settings: \"kern=1\", \"liga=1\", \"dlig=1\";\n  font-feature-settings: \"kern\" 1, \"liga\" 1, \"dlig\" 1;\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures; }\n\n.text--center {\n  text-align: center; }\n\n.text--left {\n  text-align: left; }\n\n.text--right {\n  text-align: right; }\n\n.text--justify {\n  text-align: justify; }\n\n@media only screen and (max-width: 700px) {\n  .mobile-text--center {\n    text-align: center; }\n  .mobile-text--left {\n    text-align: left; }\n  .mobile-text--right {\n    text-align: right; }\n  .mobile-text--justify {\n    text-align: justify; } }\n\n.text--white {\n  color: white; }\n  .text--white > a {\n    color: white;\n    text-decoration: none; }\n\n.text--white::-webkit-input-placeholder {\n  color: white;\n  opacity: 0.6; }\n\n.text--white::-moz-placeholder {\n  color: white;\n  opacity: 0.6; }\n\n.text--white:-ms-input-placeholder {\n  color: white;\n  opacity: 0.6; }\n\n.text--white:-moz-placeholder {\n  color: white;\n  opacity: 0.6; }\n\n.text--white:focus::-webkit-input-placeholder {\n  color: transparent; }\n\n.text--white:focus::-moz-placeholder {\n  color: transparent; }\n\n.text--white:focus:-ms-input-placeholder {\n  color: transparent; }\n\n.text--white:focus:-moz-placeholder {\n  color: transparent; }\n\nh1.text--white,\nh2.text--white,\nh3.text--white,\nh4.text--white,\nh5.text--white,\nh6.text--white {\n  color: white; }\n\np.text--white {\n  color: white; }\n"]}